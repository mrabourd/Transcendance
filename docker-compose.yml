version: "3"

services:
  db:
    container_name: db
    image: postgres:15
    restart: always
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - server
    healthcheck:
        test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
        interval: 10s
        timeout: 5s
        retries: 5

  backend:
    container_name: backend
    build: ./datas/backend/
    restart: on-failure
    command: python manage.py runserver 0.0.0.0:8000
    expose:
      - "8000"
    volumes:
      - backend-data:/usr/src/app/
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - server
        
  nginx:
    container_name: nginx
    build: ./datas/nginx/
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - logs-data:/var/log/nginx/
      - certs-data:/etc/ssl/
    depends_on:
      - backend
    networks:
      - server
    healthcheck:
        test: ["CMD-SHELL", "curl --fail --insecure https://localhost:8443/healthcheck || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 5
  
  frontend:
    container_name: frontend
    env_file: .env
    build: datas/frontend/
    expose:
      - "3000"
    depends_on:
      nginx:
        condition: service_healthy
    volumes:
      - frontend-data:/home/node/app/
    networks:
      - server

volumes:
  logs-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${DATA_FOLDER}/logs"
  certs-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${DATA_FOLDER}/certs"
  frontend-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${DATA_FOLDER}/frontend"
  backend-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${DATA_FOLDER}/backend"
  db-data:

networks:
  server:
