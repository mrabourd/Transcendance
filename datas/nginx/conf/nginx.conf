worker_processes 1;

events {
    worker_connections 1024;
}

http {
    server {
        listen 8483 ssl;
        listen [::]:8483 ssl;
        server_name ${HOST};

        access_log /dev/null;
        error_log /dev/null;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # Configuration pour servir les images
        location /avatar/ {
            alias /public/avatar/;
            
            # Définir les types MIME pour les images
            types {
                image/jpeg jpeg jpg;
                image/png png;
                image/gif gif;
                image/svg+xml svg svgz;
                image/webp webp;
                image/x-icon ico;
                image/vnd.microsoft.icon cur;
            }

            # Activer le cache pour les images
            expires 30d;
            add_header Cache-Control "public";

            # Sécurité (en-têtes recommandés)
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options DENY;
            add_header X-XSS-Protection "1; mode=block";
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        server_name ${HOST};

        access_log /dev/null;
        error_log /dev/null;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        location / {
            proxy_pass http://backend:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
        }

        location /ws/ {
            proxy_pass http://backend:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
