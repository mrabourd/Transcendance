DOCKER COMPOSE 
https://stackoverflow.com/questions/56844746/how-to-set-uid-and-gid-in-docker-compose



ADD POSTGRESQL 
https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/




LINKS
#https://docs.docker.com/compose/compose-file/05-services/#links
#Links also express implicit dependency between services in the same way 
#as depends_on, so they determine the order of service startup.

VOLUME
#https://docs.docker.com/compose/compose-file/07-volumes/


  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
    - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: hello_django@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: hello_django
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - server


volumes:
  pgadmin-data:


      fetch('https://127.0.0.1:8000/api/users/login/', {
    fetch('https://127.0.0.1:8000/api/auth/login/', {



    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }


Navigate in DB in POSTGRE container:
docker exec -it [postgre container name] psql -U [sql user name] -W [sql database name]
-to navigate inside the database:  \c [sql database name]
-to show the tables created:       \dt
-to show one table specifically:   SELECT * FROM [TABLE NAME];   (ne surtout pas oublier le ';')
-and then for example, to query for just the COLUMNS from a specific table and show the column names from the specific table 'users_user' in our database:
SELECT
  COLUMN_NAME
FROM
  INFORMATION_SCHEMA.COLUMNS
WHERE
  TABLE_NAME = 'users_user';